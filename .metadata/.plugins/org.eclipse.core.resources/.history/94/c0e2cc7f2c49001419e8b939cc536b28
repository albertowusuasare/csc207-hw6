package com.farevee.groceries;

/**
 * Implements a BulkContainer 
 * @author Albert Owusu-Asare
 * @version 1.0 of September 2014
 *
 */
public class BulkContainer
    extends BulkItem
{

  // +--------+------------------------------------------------------------
  // | Fields |
  // +--------+

  private String name;

  /**
   * Constructs a <code> BulkContainer</code>
   * @param containerName
   * @param food
   * @param itemQuantity
   * @param itemWeight
   */

  // +--------------+------------------------------------------------------
  // | Constructors |
  // +--------------+

  public BulkContainer(String containerName, BulkFood food, Weight itemWeight,
                       int itemQuantity)
  {
    super(food, itemWeight, itemQuantity);
    this.name = containerName;
  } //BulkContainer(String containerName,BulkFood food,Weight itemWeight,int itemQuantity)

  // +---------+-----------------------------------------------------------
  // | Methods |
  // +---------+

  /**
   * Gets the name of this container
   * @return the name of this  <code>BulkContainer</code>
   */
  public String getName()
  {
    return name;
  } //getName()

  /**
   * The method checks if the current BulkConatiner is equal to another BulkContainer object
   * @param obj Some object
   * @return <code>true </code> if current BulkContainer fields are equal to obj fields ; 
   *         <br> <code>false</code> if current BulkContainer fields are not equal to obj fields.
   */

  public boolean equals(Object obj)
  {
    // if the objects occupy the same memory
    if (this == obj)
      {
        return true;
      }// this == obj

    if (obj instanceof BulkContainer)
      {
        BulkContainer otherBulkContainer = (BulkContainer) obj;
        if (this.name.equals(otherBulkContainer.name)
            && super.equals(otherBulkContainer))
          {
            return true;
          } //if name equals otherBulkContainer name and the Items for both match
      } //obj is a BulkContainer

    return false;
  } //equals(Object obj)

  
  @Override
  public String toString()
  {
    return name + " of " + super.toString();
  }//toString()
}
