package com.farevee.groceries;
/**
 *  A class to describe the bulk item object
 * @author: Albert Owusu-Asare 
 */
public class BulkItem implements Item {

	/** 
	 * Fields 
	 */
	private BulkFood food;
	private Units unit; 
	private int amount; // amount of the bulk food
	private int price; // the price of the bulk food
	private Weight weight;
	
	/**
	 *  Constructor
	 */
	
	public BulkItem(BulkFood foodItem, int itemQuantity, Weight itemWeight){
		
		this.food = foodItem;
		this.amount = itemQuantity;
		this.unit = foodItem.getUnits();
		
	
		
		foodItem.setSupply(itemQuantity); //decrement supply of foodItem
	}
	
	@Override
	public Weight getWeight() {
		return this.weight;
	}

	@Override
	public int getPrice() {
		// price per unit of bulk food
		//calculate the price of the BulkItem
		int pricePerUnit =  food.getPricePerUnit() ;
		int weightAmount = weight.getWeightAmount();
		this.price = pricePerUnit * weightAmount*amount;
		return this.price;
	}
	
	public String toString(){
		return this.amount + " " + unit + " of " + food.getName();
	}
	
	/**
	 * The method checks if the current BulkItem is equal to another BulkItem object
	 * @param obj Some object
	 * @return true if current BulkItem fields are equal to obj fields
	 *         false if current BulkItem fields are not equal to obj fields.
	 */
	public boolean equals(Object obj){
		
		// check if obj is a type of BultItem
		
		if(obj instanceof BulkItem){
			BulkItem otherBulkItem = (BulkItem) obj;
			// check to see if fields match
			if ( this.food.equals(otherBulkItem.food) 
					&& this.unit.equals(otherBulkItem.unit)
					&& this.amount == otherBulkItem.amount
					&& this.price == otherBulkItem.price
					&& this.weight.equals(otherBulkItem.weight)){
				return true;
			}
		}
		
		return false;
	}
	

}
